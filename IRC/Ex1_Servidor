#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <netinet/ip.h>
#include <netinet/in.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <unistd.h>
#include <errno.h>

#define SERV_UDP_PORT 6000
#define BUFFER_SIZE 4096

void Abort(char* msg)
{
    fprintf(stderr, "<SERVER> Erro %i\n", errno);
    exit(EXIT_FAILURE);
}

int main(int argc, char** argv)
{
    int sockfd, nbytes;
    struct sockaddr_in serv_addr;
    char msg[BUFFER_SIZE];
    
    if((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) == -1)
    {
        fprintf(stderr, "<SERVER> Error %i\n", errno);
        exit(EXIT_FAILURE);
    }
    
    memset((char*) &serv_addr, 0, sizeof(serv_addr));
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);
    serv_addr.sin_port = htons(SERV_UDP_PORT);
    
    if(bind(sockfd, (struct sockaddr*) &serv_addr, sizeof(serv_addr)) == -1)
    {
        fprintf(stderr, "<SERVER> Falha ao iniciar escuta. ERRO %i\n", errno);
        exit(EXIT_FAILURE);
    }
    
    while(1)
    {
        fprintf(stdout, "Listening...\n");
        
        nbytes = recvfrom(sockfd, msg, sizeof(msg), 0, NULL, NULL);
        
        if(nbytes == -1)
        {
            fprintf(stderr, "Erro na leitura da mensagem!");
            exit(EXIT_FAILURE);
        }
        
        msg[nbytes] = '\0';
        fprintf(stdout, "<SERVER>Mensagem Recebida!\n\n");
        fprintf(stdout, "<CLIENT> %s\n\n", msg);
    }
    
    return (EXIT_SUCCESS);
}
